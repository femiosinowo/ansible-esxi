---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      #dnsPolicy: ClusterFirstWithHostNet
      containers:
      - image: traefik:1.5.0
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
          #hostPort: 80
        - name: admin
          containerPort: 8080
        securityContext:
          privileged: true
        args:
        - -d
        - --api
        - --kubernetes=true
        - --kubernetes.watch=true
        - --kubernetes.namespaces=default
        - --logLevel=DEBUG
      nodeSelector:
         tier: router
---

apiVersion: v1
kind: Service
metadata:
  name: traefik-proxy
  namespace: kube-system
spec:
  type: NodePort
  selector:
    app: traefik-ingress-lb
    tier: proxy
  ports:
  - port: 80
    targetPort: 80

---
#apiVersion: v1
#kind: Service
#metadata:
#  name: traefik-web-ui
#  namespace: kube-system
#spec:
#  selector:
#    app: traefik-ingress-lb
#    tier: proxy
#  ports:
#  - port: 80
#    targetPort: 8080    
---

kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
  type: NodePort
