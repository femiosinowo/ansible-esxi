---
apiVersion: v1
kind: Namespace
metadata:
  name: blog
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blog-config
  namespace: blog
data:
  default.conf: |
    upstream node {
      server blog.paosin.local;
    }
    server {
          listen                  80;
          server_name             blog.paosin.local;
          #root                    /usr/share/nginx/html;
          location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://node;
            proxy_redirect off;
            port_in_redirect off;
          }
        }

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blog-deployment
  namespace: blog
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
      - image: nginx:1.13.6-alpine 
        imagePullPolicy: Always
        name: blog
        ports:
        - containerPort: 80
        volumeMounts:
        - name: blog-configs
          mountPath: /etc/nginx/conf.d
      # Load the configuration files for nginx
      volumes:
        - name: blog-configs
          configMap:
            name: blog-config
            
---
apiVersion: v1
kind: Service
metadata:
  name: blog-service
  namespace: blog
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: blog
    
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: blog-ingress
  namespace: blog
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    # CHANGE ME
    - blog.paosin.local
    secretName: mysite-tls
  rules:
  # CHANGE ME
  - host: blog.paosin.local
    http:
      paths:
      - path: /
        backend:
          serviceName: blog-service
          servicePort: 80